# -*- coding: utf-8 -*-
"""ASSIGNMENT-3-SVM_Regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MS7O2pxTDDx1jw7MGYnqcAkCopszoonL
"""

#drive mounting
from google.colab import drive
drive.mount('/content/drive')

import numpy as np
import pandas as pd

#dataset import
realestate_dataset=pd.read_csv("/content/drive/MyDrive/AI/Real estate valuation data set(1).csv")

realestate_dataset.head(10)

realestate_dataset.isnull().any()

realestate_dataset.isnull().sum()

x=realestate_dataset.iloc[:,1:5].values
y=realestate_dataset.iloc[:,7:8].values

x

y

x.shape

y.shape

#split data
from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test=train_test_split(x,y,test_size=0.2,random_state=0)

print(x_train.shape)
print(y_train.shape)
print(x_test.shape)
print(y_test.shape)

#feature scaling
from sklearn.preprocessing import StandardScaler
sc=StandardScaler()
x_train=sc.fit_transform(x_train)
x_test=sc.fit_transform(x_test)

from sklearn.svm import SVR
sv=SVR()

sv.fit(x_train,y_train)

y_pred=sv.predict(x_test)

y_pred

from sklearn.metrics import r2_score
r2_score(y_test, y_pred)

y_pred=sv.predict(sc.transform(([[2017.500,7.0,390.56840,10]])))
y_pred

# tunning
from sklearn.model_selection import GridSearchCV

#define parameter range
param_grid={'C':[0.1,1,10,100,1000],
            'gamma':[1,0.1,0.01,0.001,0.0001], #curve is high, gamma value are high
            'kernel':['rbf','sigmoid']}

grid=GridSearchCV(SVR(),param_grid,refit=True,verbose=3)
grid.fit(x_train,y_train)

print(grid.best_params_) #print best parameter after tuning

svm_grid=SVR(C=10, gamma=1, kernel='rbf')

svm_grid.fit(x_train,y_train)

grid_prediction=svm_grid.predict(x_test)

from sklearn.metrics import r2_score
r2_score(y_test,grid_prediction)

